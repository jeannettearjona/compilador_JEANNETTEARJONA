// Code generated by gocc; DO NOT EDIT.

package parser

type (
	actionTable [numStates]actionRow
	actionRow   struct {
		canRecover bool
		actions    [numSymbols]action
	}
)

var actionTab = actionTable{
	actionRow{ // S0
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // ␚
			nil,      // end
			shift(3), // program
			nil,      // id
			nil,      // semicolon
			nil,      // empty
			nil,      // main
			nil,      // var
			nil,      // colon
			nil,      // comma
			nil,      // int
			nil,      // float
			nil,      // lbraket
			nil,      // rbraket
			nil,      // void
			nil,      // lparen
			nil,      // rparen
			nil,      // lbrace
			nil,      // rbrace
			nil,      // assign
			nil,      // gt
			nil,      // lt
			nil,      // neq
			nil,      // plus
			nil,      // minus
			nil,      // multiply
			nil,      // divide
			nil,      // cte_int
			nil,      // cte_float
			nil,      // if
			nil,      // else
			nil,      // do
			nil,      // while
			nil,      // print
			nil,      // cte_string
		},
	},
	actionRow{ // S1
		canRecover: false,
		actions: [numSymbols]action{
			nil,          // INVALID
			accept(true), // ␚
			nil,          // end
			nil,          // program
			nil,          // id
			nil,          // semicolon
			nil,          // empty
			nil,          // main
			nil,          // var
			nil,          // colon
			nil,          // comma
			nil,          // int
			nil,          // float
			nil,          // lbraket
			nil,          // rbraket
			nil,          // void
			nil,          // lparen
			nil,          // rparen
			nil,          // lbrace
			nil,          // rbrace
			nil,          // assign
			nil,          // gt
			nil,          // lt
			nil,          // neq
			nil,          // plus
			nil,          // minus
			nil,          // multiply
			nil,          // divide
			nil,          // cte_int
			nil,          // cte_float
			nil,          // if
			nil,          // else
			nil,          // do
			nil,          // while
			nil,          // print
			nil,          // cte_string
		},
	},
	actionRow{ // S2
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			reduce(8), // main, reduce: FUNCS_PROG
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			shift(7),  // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S3
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // ␚
			nil,      // end
			nil,      // program
			shift(8), // id
			nil,      // semicolon
			nil,      // empty
			nil,      // main
			nil,      // var
			nil,      // colon
			nil,      // comma
			nil,      // int
			nil,      // float
			nil,      // lbraket
			nil,      // rbraket
			nil,      // void
			nil,      // lparen
			nil,      // rparen
			nil,      // lbrace
			nil,      // rbrace
			nil,      // assign
			nil,      // gt
			nil,      // lt
			nil,      // neq
			nil,      // plus
			nil,      // minus
			nil,      // multiply
			nil,      // divide
			nil,      // cte_int
			nil,      // cte_float
			nil,      // if
			nil,      // else
			nil,      // do
			nil,      // while
			nil,      // print
			nil,      // cte_string
		},
	},
	actionRow{ // S4
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			shift(10), // main
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S5
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			reduce(8), // main, reduce: FUNCS_PROG
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			shift(7),  // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S6
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // main
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			shift(12), // lbraket
			nil,       // rbraket
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S7
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			shift(13), // id
			nil,       // semicolon
			nil,       // empty
			nil,       // main
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S8
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			nil,       // id
			shift(14), // semicolon
			nil,       // empty
			nil,       // main
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S9
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // main
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			shift(16), // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S10
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // main
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			reduce(4), // lbrace, reduce: DECLARE_MAIN
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S11
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			reduce(7), // main, reduce: FUNCS_PROG
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S12
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			shift(18),  // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			reduce(27), // lbrace, reduce: VARS_FUNC
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S13
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // main
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			nil,       // void
			shift(20), // lparen
			nil,       // rparen
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S14
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			reduce(3), // main, reduce: GOTO_MAIN
			reduce(3), // var, reduce: GOTO_MAIN
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			reduce(3), // void, reduce: GOTO_MAIN
			nil,       // lparen
			nil,       // rparen
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S15
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			shift(22), // end
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // main
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S16
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(23),  // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			reduce(30), // rbrace, reduce: STATEMENT_PROG
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			shift(31),  // if
			nil,        // else
			nil,        // do
			shift(33),  // while
			shift(35),  // print
			nil,        // cte_string
		},
	},
	actionRow{ // S17
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			reduce(26), // lbrace, reduce: VARS_FUNC
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S18
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			shift(36), // id
			nil,       // semicolon
			nil,       // empty
			nil,       // main
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S19
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // main
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			shift(40), // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S20
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(41),  // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(21), // rparen, reduce: HAY_PARAMS
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S21
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			reduce(6), // main, reduce: VARS_PROG
			shift(47), // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			reduce(6), // void, reduce: VARS_PROG
			nil,       // lparen
			nil,       // rparen
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S22
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(1), // ␚, reduce: Programa
			nil,       // end
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // main
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S23
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			reduce(68), // lparen, reduce: ERA_FUNC
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			shift(48),  // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S24
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // main
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbrace
			shift(49), // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S25
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(23),  // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			reduce(30), // rbrace, reduce: STATEMENT_PROG
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			shift(31),  // if
			nil,        // else
			nil,        // do
			shift(33),  // while
			shift(35),  // print
			nil,        // cte_string
		},
	},
	actionRow{ // S26
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(31), // id, reduce: STATEMENT
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			reduce(31), // rbrace, reduce: STATEMENT
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			reduce(31), // if, reduce: STATEMENT
			nil,        // else
			nil,        // do
			reduce(31), // while, reduce: STATEMENT
			reduce(31), // print, reduce: STATEMENT
			nil,        // cte_string
		},
	},
	actionRow{ // S27
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(32), // id, reduce: STATEMENT
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			reduce(32), // rbrace, reduce: STATEMENT
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			reduce(32), // if, reduce: STATEMENT
			nil,        // else
			nil,        // do
			reduce(32), // while, reduce: STATEMENT
			reduce(32), // print, reduce: STATEMENT
			nil,        // cte_string
		},
	},
	actionRow{ // S28
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(33), // id, reduce: STATEMENT
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			reduce(33), // rbrace, reduce: STATEMENT
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			reduce(33), // if, reduce: STATEMENT
			nil,        // else
			nil,        // do
			reduce(33), // while, reduce: STATEMENT
			reduce(33), // print, reduce: STATEMENT
			nil,        // cte_string
		},
	},
	actionRow{ // S29
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(34), // id, reduce: STATEMENT
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			reduce(34), // rbrace, reduce: STATEMENT
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			reduce(34), // if, reduce: STATEMENT
			nil,        // else
			nil,        // do
			reduce(34), // while, reduce: STATEMENT
			reduce(34), // print, reduce: STATEMENT
			nil,        // cte_string
		},
	},
	actionRow{ // S30
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(35), // id, reduce: STATEMENT
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			reduce(35), // rbrace, reduce: STATEMENT
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			reduce(35), // if, reduce: STATEMENT
			nil,        // else
			nil,        // do
			reduce(35), // while, reduce: STATEMENT
			reduce(35), // print, reduce: STATEMENT
			nil,        // cte_string
		},
	},
	actionRow{ // S31
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // main
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			nil,       // void
			shift(51), // lparen
			nil,       // rparen
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S32
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // main
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			nil,       // void
			shift(53), // lparen
			nil,       // rparen
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S33
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			reduce(65), // lparen, reduce: WHILE_START
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S34
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // main
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			nil,       // void
			shift(55), // lparen
			nil,       // rparen
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S35
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // main
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			nil,       // void
			shift(56), // lparen
			nil,       // rparen
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S36
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			reduce(15), // colon, reduce: MAS_IDS
			shift(58),  // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S37
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // main
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			reduce(9), // lbrace, reduce: VARS
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S38
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // main
			nil,       // var
			shift(59), // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S39
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // main
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			shift(60), // rbraket
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S40
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(23),  // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			reduce(30), // rbrace, reduce: STATEMENT_PROG
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			shift(31),  // if
			nil,        // else
			nil,        // do
			shift(33),  // while
			shift(35),  // print
			nil,        // cte_string
		},
	},
	actionRow{ // S41
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // main
			nil,       // var
			shift(62), // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S42
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // main
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			nil,       // void
			nil,       // lparen
			shift(63), // rparen
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S43
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(20), // rparen, reduce: HAY_PARAMS
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S44
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			shift(64),  // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(25), // rparen, reduce: MAS_PARAMS
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S45
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			reduce(2), // main, reduce: DECLARA_PROG
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			reduce(2), // void, reduce: DECLARA_PROG
			nil,       // lparen
			nil,       // rparen
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S46
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			reduce(5), // main, reduce: VARS_PROG
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			reduce(5), // void, reduce: VARS_PROG
			nil,       // lparen
			nil,       // rparen
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S47
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			shift(36), // id
			nil,       // semicolon
			nil,       // empty
			nil,       // main
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S48
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S49
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			reduce(28), // end, reduce: Body
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S50
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			reduce(29), // rbrace, reduce: STATEMENT_PROG
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S51
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S52
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // main
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			shift(85), // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S53
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S54
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			nil,       // main
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			shift(87), // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S55
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			reduce(71), // rparen, reduce: EXPRESION_STATEMENT
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S56
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			shift(99),  // cte_string
		},
	},
	actionRow{ // S57
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			reduce(13), // colon, reduce: ID_LIST
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S58
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			shift(36), // id
			nil,       // semicolon
			nil,       // empty
			nil,       // main
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S59
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(102), // int
			shift(103), // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S60
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			shift(104), // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S61
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			shift(105), // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S62
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(107), // int
			shift(108), // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S63
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			reduce(19), // lbraket, reduce: DECLARA_FUNC
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S64
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			shift(41), // id
			nil,       // semicolon
			nil,       // empty
			nil,       // main
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S65
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(22), // rparen, reduce: PARAMETROS
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S66
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // end
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // empty
			reduce(9), // main, reduce: VARS
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // lbraket
			nil,       // rbraket
			reduce(9), // void, reduce: VARS
			nil,       // lparen
			nil,       // rparen
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // multiply
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // do
			nil,       // while
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S67
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			shift(110), // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S68
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(51), // id, reduce: FONDO_FALSO
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			reduce(51), // lparen, reduce: FONDO_FALSO
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(51), // plus, reduce: FONDO_FALSO
			reduce(51), // minus, reduce: FONDO_FALSO
			nil,        // multiply
			nil,        // divide
			reduce(51), // cte_int, reduce: FONDO_FALSO
			reduce(51), // cte_float, reduce: FONDO_FALSO
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S69
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			shift(111), // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S70
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(37), // semicolon, reduce: EXPRESION
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			shift(113), // gt
			shift(114), // lt
			shift(115), // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S71
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(42), // semicolon, reduce: EXP
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(42), // gt, reduce: EXP
			reduce(42), // lt, reduce: EXP
			reduce(42), // neq, reduce: EXP
			shift(117), // plus
			shift(118), // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S72
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(53), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			reduce(53), // cte_int, reduce: FACTOR_OPERADOR
			reduce(53), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S73
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(44), // id, reduce: PLUS_MINUS
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			reduce(44), // cte_int, reduce: PLUS_MINUS
			reduce(44), // cte_float, reduce: PLUS_MINUS
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S74
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(45), // id, reduce: PLUS_MINUS
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			reduce(45), // cte_int, reduce: PLUS_MINUS
			reduce(45), // cte_float, reduce: PLUS_MINUS
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S75
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(46), // semicolon, reduce: TERMINO
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(46), // gt, reduce: TERMINO
			reduce(46), // lt, reduce: TERMINO
			reduce(46), // neq, reduce: TERMINO
			reduce(46), // plus, reduce: TERMINO
			reduce(46), // minus, reduce: TERMINO
			shift(120), // multiply
			shift(121), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S76
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S77
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(123), // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			shift(126), // cte_int
			shift(127), // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S78
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			shift(128), // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S79
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(37), // rparen, reduce: EXPRESION
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			shift(113), // gt
			shift(114), // lt
			shift(115), // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S80
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(42), // rparen, reduce: EXP
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(42), // gt, reduce: EXP
			reduce(42), // lt, reduce: EXP
			reduce(42), // neq, reduce: EXP
			shift(117), // plus
			shift(118), // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S81
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(46), // rparen, reduce: TERMINO
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(46), // gt, reduce: TERMINO
			reduce(46), // lt, reduce: TERMINO
			reduce(46), // neq, reduce: TERMINO
			reduce(46), // plus, reduce: TERMINO
			reduce(46), // minus, reduce: TERMINO
			shift(120), // multiply
			shift(121), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S82
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S83
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(133), // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			shift(136), // cte_int
			shift(137), // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S84
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(62), // semicolon, reduce: ELSE_BODY
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			shift(139), // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S85
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(23),  // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			reduce(30), // rbrace, reduce: STATEMENT_PROG
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			shift(31),  // if
			nil,        // else
			nil,        // do
			shift(33),  // while
			shift(35),  // print
			nil,        // cte_string
		},
	},
	actionRow{ // S86
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			shift(141), // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S87
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			shift(143), // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S88
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			shift(144), // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(73), // rparen, reduce: MAS_EXPRESIONES
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S89
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(37), // comma, reduce: EXPRESION
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(37), // rparen, reduce: EXPRESION
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			shift(113), // gt
			shift(114), // lt
			shift(115), // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S90
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(42), // comma, reduce: EXP
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(42), // rparen, reduce: EXP
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(42), // gt, reduce: EXP
			reduce(42), // lt, reduce: EXP
			reduce(42), // neq, reduce: EXP
			shift(117), // plus
			shift(118), // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S91
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(46), // comma, reduce: TERMINO
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(46), // rparen, reduce: TERMINO
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(46), // gt, reduce: TERMINO
			reduce(46), // lt, reduce: TERMINO
			reduce(46), // neq, reduce: TERMINO
			reduce(46), // plus, reduce: TERMINO
			reduce(46), // minus, reduce: TERMINO
			shift(120), // multiply
			shift(121), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S92
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S93
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(150), // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			shift(153), // cte_int
			shift(154), // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S94
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			shift(155), // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S95
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(69), // rparen, reduce: PARAMS
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S96
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(76), // comma, reduce: EXPRESION_PRINT
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(76), // rparen, reduce: EXPRESION_PRINT
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S97
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			shift(156), // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S98
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			shift(157), // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(79), // rparen, reduce: EXPRESIONES_PRINT
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S99
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(77), // comma, reduce: EXPRESION_PRINT
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(77), // rparen, reduce: EXPRESION_PRINT
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S100
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			reduce(14), // colon, reduce: MAS_IDS
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S101
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			shift(159), // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S102
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(16), // semicolon, reduce: TYPE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S103
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(17), // semicolon, reduce: TYPE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S104
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			reduce(18), // main, reduce: FUNCS
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			reduce(18), // void, reduce: FUNCS
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S105
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			reduce(28), // rbraket, reduce: Body
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S106
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(23), // comma, reduce: PARAM
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(23), // rparen, reduce: PARAM
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S107
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(16), // comma, reduce: TYPE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(16), // rparen, reduce: TYPE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S108
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(17), // comma, reduce: TYPE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(17), // rparen, reduce: TYPE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S109
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(24), // rparen, reduce: MAS_PARAMS
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S110
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(102), // int
			shift(103), // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S111
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(36), // id, reduce: ASSIGN
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			reduce(36), // rbrace, reduce: ASSIGN
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			reduce(36), // if, reduce: ASSIGN
			nil,        // else
			nil,        // do
			reduce(36), // while, reduce: ASSIGN
			reduce(36), // print, reduce: ASSIGN
			nil,        // cte_string
		},
	},
	actionRow{ // S112
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S113
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(39), // id, reduce: OP_REL
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			reduce(39), // lparen, reduce: OP_REL
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(39), // plus, reduce: OP_REL
			reduce(39), // minus, reduce: OP_REL
			nil,        // multiply
			nil,        // divide
			reduce(39), // cte_int, reduce: OP_REL
			reduce(39), // cte_float, reduce: OP_REL
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S114
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(40), // id, reduce: OP_REL
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			reduce(40), // lparen, reduce: OP_REL
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(40), // plus, reduce: OP_REL
			reduce(40), // minus, reduce: OP_REL
			nil,        // multiply
			nil,        // divide
			reduce(40), // cte_int, reduce: OP_REL
			reduce(40), // cte_float, reduce: OP_REL
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S115
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(41), // id, reduce: OP_REL
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			reduce(41), // lparen, reduce: OP_REL
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(41), // plus, reduce: OP_REL
			reduce(41), // minus, reduce: OP_REL
			nil,        // multiply
			nil,        // divide
			reduce(41), // cte_int, reduce: OP_REL
			reduce(41), // cte_float, reduce: OP_REL
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S116
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S117
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(44), // id, reduce: PLUS_MINUS
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			reduce(44), // lparen, reduce: PLUS_MINUS
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(44), // plus, reduce: PLUS_MINUS
			reduce(44), // minus, reduce: PLUS_MINUS
			nil,        // multiply
			nil,        // divide
			reduce(44), // cte_int, reduce: PLUS_MINUS
			reduce(44), // cte_float, reduce: PLUS_MINUS
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S118
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(45), // id, reduce: PLUS_MINUS
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			reduce(45), // lparen, reduce: PLUS_MINUS
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(45), // plus, reduce: PLUS_MINUS
			reduce(45), // minus, reduce: PLUS_MINUS
			nil,        // multiply
			nil,        // divide
			reduce(45), // cte_int, reduce: PLUS_MINUS
			reduce(45), // cte_float, reduce: PLUS_MINUS
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S119
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S120
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(48), // id, reduce: MULT_DIV
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			reduce(48), // lparen, reduce: MULT_DIV
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(48), // plus, reduce: MULT_DIV
			reduce(48), // minus, reduce: MULT_DIV
			nil,        // multiply
			nil,        // divide
			reduce(48), // cte_int, reduce: MULT_DIV
			reduce(48), // cte_float, reduce: MULT_DIV
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S121
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(49), // id, reduce: MULT_DIV
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			reduce(49), // lparen, reduce: MULT_DIV
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(49), // plus, reduce: MULT_DIV
			reduce(49), // minus, reduce: MULT_DIV
			nil,        // multiply
			nil,        // divide
			reduce(49), // cte_int, reduce: MULT_DIV
			reduce(49), // cte_float, reduce: MULT_DIV
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S122
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			shift(173), // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S123
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(55), // semicolon, reduce: ID_CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(55), // gt, reduce: ID_CTE
			reduce(55), // lt, reduce: ID_CTE
			reduce(55), // neq, reduce: ID_CTE
			reduce(55), // plus, reduce: ID_CTE
			reduce(55), // minus, reduce: ID_CTE
			reduce(55), // multiply, reduce: ID_CTE
			reduce(55), // divide, reduce: ID_CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S124
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(52), // semicolon, reduce: FACTOR
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(52), // gt, reduce: FACTOR
			reduce(52), // lt, reduce: FACTOR
			reduce(52), // neq, reduce: FACTOR
			reduce(52), // plus, reduce: FACTOR
			reduce(52), // minus, reduce: FACTOR
			reduce(52), // multiply, reduce: FACTOR
			reduce(52), // divide, reduce: FACTOR
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S125
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(56), // semicolon, reduce: ID_CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(56), // gt, reduce: ID_CTE
			reduce(56), // lt, reduce: ID_CTE
			reduce(56), // neq, reduce: ID_CTE
			reduce(56), // plus, reduce: ID_CTE
			reduce(56), // minus, reduce: ID_CTE
			reduce(56), // multiply, reduce: ID_CTE
			reduce(56), // divide, reduce: ID_CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S126
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(57), // semicolon, reduce: CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(57), // gt, reduce: CTE
			reduce(57), // lt, reduce: CTE
			reduce(57), // neq, reduce: CTE
			reduce(57), // plus, reduce: CTE
			reduce(57), // minus, reduce: CTE
			reduce(57), // multiply, reduce: CTE
			reduce(57), // divide, reduce: CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S127
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(58), // semicolon, reduce: CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(58), // gt, reduce: CTE
			reduce(58), // lt, reduce: CTE
			reduce(58), // neq, reduce: CTE
			reduce(58), // plus, reduce: CTE
			reduce(58), // minus, reduce: CTE
			reduce(58), // multiply, reduce: CTE
			reduce(58), // divide, reduce: CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S128
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			reduce(60), // lbrace, reduce: CONDITION
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S129
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S130
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S131
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S132
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			shift(186), // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S133
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(55), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(55), // gt, reduce: ID_CTE
			reduce(55), // lt, reduce: ID_CTE
			reduce(55), // neq, reduce: ID_CTE
			reduce(55), // plus, reduce: ID_CTE
			reduce(55), // minus, reduce: ID_CTE
			reduce(55), // multiply, reduce: ID_CTE
			reduce(55), // divide, reduce: ID_CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S134
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(52), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(52), // gt, reduce: FACTOR
			reduce(52), // lt, reduce: FACTOR
			reduce(52), // neq, reduce: FACTOR
			reduce(52), // plus, reduce: FACTOR
			reduce(52), // minus, reduce: FACTOR
			reduce(52), // multiply, reduce: FACTOR
			reduce(52), // divide, reduce: FACTOR
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S135
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(56), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(56), // gt, reduce: ID_CTE
			reduce(56), // lt, reduce: ID_CTE
			reduce(56), // neq, reduce: ID_CTE
			reduce(56), // plus, reduce: ID_CTE
			reduce(56), // minus, reduce: ID_CTE
			reduce(56), // multiply, reduce: ID_CTE
			reduce(56), // divide, reduce: ID_CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S136
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(57), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(57), // gt, reduce: CTE
			reduce(57), // lt, reduce: CTE
			reduce(57), // neq, reduce: CTE
			reduce(57), // plus, reduce: CTE
			reduce(57), // minus, reduce: CTE
			reduce(57), // multiply, reduce: CTE
			reduce(57), // divide, reduce: CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S137
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(58), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(58), // gt, reduce: CTE
			reduce(58), // lt, reduce: CTE
			reduce(58), // neq, reduce: CTE
			reduce(58), // plus, reduce: CTE
			reduce(58), // minus, reduce: CTE
			reduce(58), // multiply, reduce: CTE
			reduce(58), // divide, reduce: CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S138
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			shift(187), // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S139
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			reduce(63), // lbrace, reduce: ELSE_JUMP
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S140
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			shift(189), // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S141
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			reduce(60), // do, reduce: CONDITION
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S142
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(66), // semicolon, reduce: WHILE_END
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S143
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(23),  // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			reduce(30), // rbrace, reduce: STATEMENT_PROG
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			shift(31),  // if
			nil,        // else
			nil,        // do
			shift(33),  // while
			shift(35),  // print
			nil,        // cte_string
		},
	},
	actionRow{ // S144
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S145
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(70), // rparen, reduce: EXPRESION_STATEMENT
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S146
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S147
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S148
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S149
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			shift(205), // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S150
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(55), // comma, reduce: ID_CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(55), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(55), // gt, reduce: ID_CTE
			reduce(55), // lt, reduce: ID_CTE
			reduce(55), // neq, reduce: ID_CTE
			reduce(55), // plus, reduce: ID_CTE
			reduce(55), // minus, reduce: ID_CTE
			reduce(55), // multiply, reduce: ID_CTE
			reduce(55), // divide, reduce: ID_CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S151
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(52), // comma, reduce: FACTOR
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(52), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(52), // gt, reduce: FACTOR
			reduce(52), // lt, reduce: FACTOR
			reduce(52), // neq, reduce: FACTOR
			reduce(52), // plus, reduce: FACTOR
			reduce(52), // minus, reduce: FACTOR
			reduce(52), // multiply, reduce: FACTOR
			reduce(52), // divide, reduce: FACTOR
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S152
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(56), // comma, reduce: ID_CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(56), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(56), // gt, reduce: ID_CTE
			reduce(56), // lt, reduce: ID_CTE
			reduce(56), // neq, reduce: ID_CTE
			reduce(56), // plus, reduce: ID_CTE
			reduce(56), // minus, reduce: ID_CTE
			reduce(56), // multiply, reduce: ID_CTE
			reduce(56), // divide, reduce: ID_CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S153
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(57), // comma, reduce: CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(57), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(57), // gt, reduce: CTE
			reduce(57), // lt, reduce: CTE
			reduce(57), // neq, reduce: CTE
			reduce(57), // plus, reduce: CTE
			reduce(57), // minus, reduce: CTE
			reduce(57), // multiply, reduce: CTE
			reduce(57), // divide, reduce: CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S154
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(58), // comma, reduce: CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(58), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(58), // gt, reduce: CTE
			reduce(58), // lt, reduce: CTE
			reduce(58), // neq, reduce: CTE
			reduce(58), // plus, reduce: CTE
			reduce(58), // minus, reduce: CTE
			reduce(58), // multiply, reduce: CTE
			reduce(58), // divide, reduce: CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S155
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			shift(206), // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S156
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			shift(207), // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S157
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			shift(99),  // cte_string
		},
	},
	actionRow{ // S158
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(75), // rparen, reduce: LISTA_PRINT
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S159
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(36),  // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			reduce(12), // lbrace, reduce: MAS_VARIABLES
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S160
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			shift(211), // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S161
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(38), // semicolon, reduce: EXPRESION
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S162
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(42), // semicolon, reduce: EXP
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(117), // plus
			shift(118), // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S163
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(46), // semicolon, reduce: TERMINO
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(46), // plus, reduce: TERMINO
			reduce(46), // minus, reduce: TERMINO
			shift(120), // multiply
			shift(121), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S164
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S165
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(215), // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			shift(218), // cte_int
			shift(219), // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S166
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(43), // semicolon, reduce: EXP
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(43), // gt, reduce: EXP
			reduce(43), // lt, reduce: EXP
			reduce(43), // neq, reduce: EXP
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S167
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(46), // semicolon, reduce: TERMINO
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(46), // gt, reduce: TERMINO
			reduce(46), // lt, reduce: TERMINO
			reduce(46), // neq, reduce: TERMINO
			nil,        // plus
			nil,        // minus
			shift(120), // multiply
			shift(121), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S168
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S169
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(222), // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			shift(225), // cte_int
			shift(226), // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S170
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(47), // semicolon, reduce: TERMINO
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(47), // gt, reduce: TERMINO
			reduce(47), // lt, reduce: TERMINO
			reduce(47), // neq, reduce: TERMINO
			reduce(47), // plus, reduce: TERMINO
			reduce(47), // minus, reduce: TERMINO
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S171
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S172
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(228), // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			shift(231), // cte_int
			shift(232), // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S173
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(50), // semicolon, reduce: FACTOR
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(50), // gt, reduce: FACTOR
			reduce(50), // lt, reduce: FACTOR
			reduce(50), // neq, reduce: FACTOR
			reduce(50), // plus, reduce: FACTOR
			reduce(50), // minus, reduce: FACTOR
			reduce(50), // multiply, reduce: FACTOR
			reduce(50), // divide, reduce: FACTOR
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S174
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(38), // rparen, reduce: EXPRESION
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S175
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(42), // rparen, reduce: EXP
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(117), // plus
			shift(118), // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S176
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(46), // rparen, reduce: TERMINO
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(46), // plus, reduce: TERMINO
			reduce(46), // minus, reduce: TERMINO
			shift(120), // multiply
			shift(121), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S177
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S178
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(236), // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			shift(239), // cte_int
			shift(240), // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S179
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(43), // rparen, reduce: EXP
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(43), // gt, reduce: EXP
			reduce(43), // lt, reduce: EXP
			reduce(43), // neq, reduce: EXP
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S180
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(46), // rparen, reduce: TERMINO
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(46), // gt, reduce: TERMINO
			reduce(46), // lt, reduce: TERMINO
			reduce(46), // neq, reduce: TERMINO
			nil,        // plus
			nil,        // minus
			shift(120), // multiply
			shift(121), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S181
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S182
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(243), // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			shift(246), // cte_int
			shift(247), // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S183
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(47), // rparen, reduce: TERMINO
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(47), // gt, reduce: TERMINO
			reduce(47), // lt, reduce: TERMINO
			reduce(47), // neq, reduce: TERMINO
			reduce(47), // plus, reduce: TERMINO
			reduce(47), // minus, reduce: TERMINO
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S184
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S185
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(249), // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			shift(252), // cte_int
			shift(253), // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S186
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(50), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(50), // gt, reduce: FACTOR
			reduce(50), // lt, reduce: FACTOR
			reduce(50), // neq, reduce: FACTOR
			reduce(50), // plus, reduce: FACTOR
			reduce(50), // minus, reduce: FACTOR
			reduce(50), // multiply, reduce: FACTOR
			reduce(50), // divide, reduce: FACTOR
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S187
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(59), // id, reduce: IF
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			reduce(59), // rbrace, reduce: IF
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			reduce(59), // if, reduce: IF
			nil,        // else
			nil,        // do
			reduce(59), // while, reduce: IF
			reduce(59), // print, reduce: IF
			nil,        // cte_string
		},
	},
	actionRow{ // S188
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			shift(143), // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S189
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(28), // semicolon, reduce: Body
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			reduce(28), // else, reduce: Body
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S190
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			shift(255), // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S191
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			shift(256), // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S192
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			shift(144), // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(73), // rparen, reduce: MAS_EXPRESIONES
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S193
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(38), // comma, reduce: EXPRESION
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(38), // rparen, reduce: EXPRESION
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S194
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(42), // comma, reduce: EXP
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(42), // rparen, reduce: EXP
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(117), // plus
			shift(118), // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S195
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(46), // comma, reduce: TERMINO
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(46), // rparen, reduce: TERMINO
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(46), // plus, reduce: TERMINO
			reduce(46), // minus, reduce: TERMINO
			shift(120), // multiply
			shift(121), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S196
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S197
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(261), // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			shift(264), // cte_int
			shift(265), // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S198
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(43), // comma, reduce: EXP
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(43), // rparen, reduce: EXP
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(43), // gt, reduce: EXP
			reduce(43), // lt, reduce: EXP
			reduce(43), // neq, reduce: EXP
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S199
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(46), // comma, reduce: TERMINO
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(46), // rparen, reduce: TERMINO
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(46), // gt, reduce: TERMINO
			reduce(46), // lt, reduce: TERMINO
			reduce(46), // neq, reduce: TERMINO
			nil,        // plus
			nil,        // minus
			shift(120), // multiply
			shift(121), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S200
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S201
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(268), // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			shift(271), // cte_int
			shift(272), // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S202
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(47), // comma, reduce: TERMINO
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(47), // rparen, reduce: TERMINO
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(47), // gt, reduce: TERMINO
			reduce(47), // lt, reduce: TERMINO
			reduce(47), // neq, reduce: TERMINO
			reduce(47), // plus, reduce: TERMINO
			reduce(47), // minus, reduce: TERMINO
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S203
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S204
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(274), // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			shift(277), // cte_int
			shift(278), // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S205
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(50), // comma, reduce: FACTOR
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(50), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(50), // gt, reduce: FACTOR
			reduce(50), // lt, reduce: FACTOR
			reduce(50), // neq, reduce: FACTOR
			reduce(50), // plus, reduce: FACTOR
			reduce(50), // minus, reduce: FACTOR
			reduce(50), // multiply, reduce: FACTOR
			reduce(50), // divide, reduce: FACTOR
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S206
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(67), // id, reduce: F_CALL
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			reduce(67), // rbrace, reduce: F_CALL
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			reduce(67), // if, reduce: F_CALL
			nil,        // else
			nil,        // do
			reduce(67), // while, reduce: F_CALL
			reduce(67), // print, reduce: F_CALL
			nil,        // cte_string
		},
	},
	actionRow{ // S207
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(74), // id, reduce: PRINT
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			reduce(74), // rbrace, reduce: PRINT
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			reduce(74), // if, reduce: PRINT
			nil,        // else
			nil,        // do
			reduce(74), // while, reduce: PRINT
			reduce(74), // print, reduce: PRINT
			nil,        // cte_string
		},
	},
	actionRow{ // S208
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			shift(157), // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(79), // rparen, reduce: EXPRESIONES_PRINT
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S209
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			reduce(11), // lbrace, reduce: MAS_VARIABLES
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S210
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			reduce(10), // lbrace, reduce: VARIABLES
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S211
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(36),  // id
			nil,        // semicolon
			nil,        // empty
			reduce(12), // main, reduce: MAS_VARIABLES
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			reduce(12), // void, reduce: MAS_VARIABLES
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S212
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S213
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S214
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			shift(289), // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S215
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(55), // semicolon, reduce: ID_CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(55), // plus, reduce: ID_CTE
			reduce(55), // minus, reduce: ID_CTE
			reduce(55), // multiply, reduce: ID_CTE
			reduce(55), // divide, reduce: ID_CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S216
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(52), // semicolon, reduce: FACTOR
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(52), // plus, reduce: FACTOR
			reduce(52), // minus, reduce: FACTOR
			reduce(52), // multiply, reduce: FACTOR
			reduce(52), // divide, reduce: FACTOR
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S217
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(56), // semicolon, reduce: ID_CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(56), // plus, reduce: ID_CTE
			reduce(56), // minus, reduce: ID_CTE
			reduce(56), // multiply, reduce: ID_CTE
			reduce(56), // divide, reduce: ID_CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S218
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(57), // semicolon, reduce: CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(57), // plus, reduce: CTE
			reduce(57), // minus, reduce: CTE
			reduce(57), // multiply, reduce: CTE
			reduce(57), // divide, reduce: CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S219
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(58), // semicolon, reduce: CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(58), // plus, reduce: CTE
			reduce(58), // minus, reduce: CTE
			reduce(58), // multiply, reduce: CTE
			reduce(58), // divide, reduce: CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S220
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S221
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			shift(293), // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S222
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(55), // semicolon, reduce: ID_CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(55), // gt, reduce: ID_CTE
			reduce(55), // lt, reduce: ID_CTE
			reduce(55), // neq, reduce: ID_CTE
			nil,        // plus
			nil,        // minus
			reduce(55), // multiply, reduce: ID_CTE
			reduce(55), // divide, reduce: ID_CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S223
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(52), // semicolon, reduce: FACTOR
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(52), // gt, reduce: FACTOR
			reduce(52), // lt, reduce: FACTOR
			reduce(52), // neq, reduce: FACTOR
			nil,        // plus
			nil,        // minus
			reduce(52), // multiply, reduce: FACTOR
			reduce(52), // divide, reduce: FACTOR
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S224
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(56), // semicolon, reduce: ID_CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(56), // gt, reduce: ID_CTE
			reduce(56), // lt, reduce: ID_CTE
			reduce(56), // neq, reduce: ID_CTE
			nil,        // plus
			nil,        // minus
			reduce(56), // multiply, reduce: ID_CTE
			reduce(56), // divide, reduce: ID_CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S225
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(57), // semicolon, reduce: CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(57), // gt, reduce: CTE
			reduce(57), // lt, reduce: CTE
			reduce(57), // neq, reduce: CTE
			nil,        // plus
			nil,        // minus
			reduce(57), // multiply, reduce: CTE
			reduce(57), // divide, reduce: CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S226
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(58), // semicolon, reduce: CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(58), // gt, reduce: CTE
			reduce(58), // lt, reduce: CTE
			reduce(58), // neq, reduce: CTE
			nil,        // plus
			nil,        // minus
			reduce(58), // multiply, reduce: CTE
			reduce(58), // divide, reduce: CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S227
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			shift(294), // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S228
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(55), // semicolon, reduce: ID_CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(55), // gt, reduce: ID_CTE
			reduce(55), // lt, reduce: ID_CTE
			reduce(55), // neq, reduce: ID_CTE
			reduce(55), // plus, reduce: ID_CTE
			reduce(55), // minus, reduce: ID_CTE
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S229
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(52), // semicolon, reduce: FACTOR
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(52), // gt, reduce: FACTOR
			reduce(52), // lt, reduce: FACTOR
			reduce(52), // neq, reduce: FACTOR
			reduce(52), // plus, reduce: FACTOR
			reduce(52), // minus, reduce: FACTOR
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S230
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(56), // semicolon, reduce: ID_CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(56), // gt, reduce: ID_CTE
			reduce(56), // lt, reduce: ID_CTE
			reduce(56), // neq, reduce: ID_CTE
			reduce(56), // plus, reduce: ID_CTE
			reduce(56), // minus, reduce: ID_CTE
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S231
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(57), // semicolon, reduce: CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(57), // gt, reduce: CTE
			reduce(57), // lt, reduce: CTE
			reduce(57), // neq, reduce: CTE
			reduce(57), // plus, reduce: CTE
			reduce(57), // minus, reduce: CTE
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S232
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(58), // semicolon, reduce: CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(58), // gt, reduce: CTE
			reduce(58), // lt, reduce: CTE
			reduce(58), // neq, reduce: CTE
			reduce(58), // plus, reduce: CTE
			reduce(58), // minus, reduce: CTE
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S233
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S234
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S235
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			shift(302), // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S236
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(55), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(55), // plus, reduce: ID_CTE
			reduce(55), // minus, reduce: ID_CTE
			reduce(55), // multiply, reduce: ID_CTE
			reduce(55), // divide, reduce: ID_CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S237
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(52), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(52), // plus, reduce: FACTOR
			reduce(52), // minus, reduce: FACTOR
			reduce(52), // multiply, reduce: FACTOR
			reduce(52), // divide, reduce: FACTOR
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S238
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(56), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(56), // plus, reduce: ID_CTE
			reduce(56), // minus, reduce: ID_CTE
			reduce(56), // multiply, reduce: ID_CTE
			reduce(56), // divide, reduce: ID_CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S239
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(57), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(57), // plus, reduce: CTE
			reduce(57), // minus, reduce: CTE
			reduce(57), // multiply, reduce: CTE
			reduce(57), // divide, reduce: CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S240
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(58), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(58), // plus, reduce: CTE
			reduce(58), // minus, reduce: CTE
			reduce(58), // multiply, reduce: CTE
			reduce(58), // divide, reduce: CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S241
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S242
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			shift(306), // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S243
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(55), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(55), // gt, reduce: ID_CTE
			reduce(55), // lt, reduce: ID_CTE
			reduce(55), // neq, reduce: ID_CTE
			nil,        // plus
			nil,        // minus
			reduce(55), // multiply, reduce: ID_CTE
			reduce(55), // divide, reduce: ID_CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S244
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(52), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(52), // gt, reduce: FACTOR
			reduce(52), // lt, reduce: FACTOR
			reduce(52), // neq, reduce: FACTOR
			nil,        // plus
			nil,        // minus
			reduce(52), // multiply, reduce: FACTOR
			reduce(52), // divide, reduce: FACTOR
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S245
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(56), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(56), // gt, reduce: ID_CTE
			reduce(56), // lt, reduce: ID_CTE
			reduce(56), // neq, reduce: ID_CTE
			nil,        // plus
			nil,        // minus
			reduce(56), // multiply, reduce: ID_CTE
			reduce(56), // divide, reduce: ID_CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S246
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(57), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(57), // gt, reduce: CTE
			reduce(57), // lt, reduce: CTE
			reduce(57), // neq, reduce: CTE
			nil,        // plus
			nil,        // minus
			reduce(57), // multiply, reduce: CTE
			reduce(57), // divide, reduce: CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S247
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(58), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(58), // gt, reduce: CTE
			reduce(58), // lt, reduce: CTE
			reduce(58), // neq, reduce: CTE
			nil,        // plus
			nil,        // minus
			reduce(58), // multiply, reduce: CTE
			reduce(58), // divide, reduce: CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S248
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			shift(307), // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S249
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(55), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(55), // gt, reduce: ID_CTE
			reduce(55), // lt, reduce: ID_CTE
			reduce(55), // neq, reduce: ID_CTE
			reduce(55), // plus, reduce: ID_CTE
			reduce(55), // minus, reduce: ID_CTE
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S250
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(52), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(52), // gt, reduce: FACTOR
			reduce(52), // lt, reduce: FACTOR
			reduce(52), // neq, reduce: FACTOR
			reduce(52), // plus, reduce: FACTOR
			reduce(52), // minus, reduce: FACTOR
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S251
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(56), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(56), // gt, reduce: ID_CTE
			reduce(56), // lt, reduce: ID_CTE
			reduce(56), // neq, reduce: ID_CTE
			reduce(56), // plus, reduce: ID_CTE
			reduce(56), // minus, reduce: ID_CTE
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S252
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(57), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(57), // gt, reduce: CTE
			reduce(57), // lt, reduce: CTE
			reduce(57), // neq, reduce: CTE
			reduce(57), // plus, reduce: CTE
			reduce(57), // minus, reduce: CTE
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S253
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(58), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(58), // gt, reduce: CTE
			reduce(58), // lt, reduce: CTE
			reduce(58), // neq, reduce: CTE
			reduce(58), // plus, reduce: CTE
			reduce(58), // minus, reduce: CTE
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S254
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(61), // semicolon, reduce: ELSE_BODY
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S255
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(64), // id, reduce: CYCLE
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			reduce(64), // rbrace, reduce: CYCLE
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			reduce(64), // if, reduce: CYCLE
			nil,        // else
			nil,        // do
			reduce(64), // while, reduce: CYCLE
			reduce(64), // print, reduce: CYCLE
			nil,        // cte_string
		},
	},
	actionRow{ // S256
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(28), // semicolon, reduce: Body
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S257
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(72), // rparen, reduce: MAS_EXPRESIONES
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S258
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S259
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S260
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			shift(315), // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S261
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(55), // comma, reduce: ID_CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(55), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(55), // plus, reduce: ID_CTE
			reduce(55), // minus, reduce: ID_CTE
			reduce(55), // multiply, reduce: ID_CTE
			reduce(55), // divide, reduce: ID_CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S262
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(52), // comma, reduce: FACTOR
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(52), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(52), // plus, reduce: FACTOR
			reduce(52), // minus, reduce: FACTOR
			reduce(52), // multiply, reduce: FACTOR
			reduce(52), // divide, reduce: FACTOR
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S263
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(56), // comma, reduce: ID_CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(56), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(56), // plus, reduce: ID_CTE
			reduce(56), // minus, reduce: ID_CTE
			reduce(56), // multiply, reduce: ID_CTE
			reduce(56), // divide, reduce: ID_CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S264
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(57), // comma, reduce: CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(57), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(57), // plus, reduce: CTE
			reduce(57), // minus, reduce: CTE
			reduce(57), // multiply, reduce: CTE
			reduce(57), // divide, reduce: CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S265
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(58), // comma, reduce: CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(58), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(58), // plus, reduce: CTE
			reduce(58), // minus, reduce: CTE
			reduce(58), // multiply, reduce: CTE
			reduce(58), // divide, reduce: CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S266
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S267
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			shift(319), // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S268
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(55), // comma, reduce: ID_CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(55), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(55), // gt, reduce: ID_CTE
			reduce(55), // lt, reduce: ID_CTE
			reduce(55), // neq, reduce: ID_CTE
			nil,        // plus
			nil,        // minus
			reduce(55), // multiply, reduce: ID_CTE
			reduce(55), // divide, reduce: ID_CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S269
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(52), // comma, reduce: FACTOR
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(52), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(52), // gt, reduce: FACTOR
			reduce(52), // lt, reduce: FACTOR
			reduce(52), // neq, reduce: FACTOR
			nil,        // plus
			nil,        // minus
			reduce(52), // multiply, reduce: FACTOR
			reduce(52), // divide, reduce: FACTOR
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S270
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(56), // comma, reduce: ID_CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(56), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(56), // gt, reduce: ID_CTE
			reduce(56), // lt, reduce: ID_CTE
			reduce(56), // neq, reduce: ID_CTE
			nil,        // plus
			nil,        // minus
			reduce(56), // multiply, reduce: ID_CTE
			reduce(56), // divide, reduce: ID_CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S271
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(57), // comma, reduce: CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(57), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(57), // gt, reduce: CTE
			reduce(57), // lt, reduce: CTE
			reduce(57), // neq, reduce: CTE
			nil,        // plus
			nil,        // minus
			reduce(57), // multiply, reduce: CTE
			reduce(57), // divide, reduce: CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S272
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(58), // comma, reduce: CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(58), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(58), // gt, reduce: CTE
			reduce(58), // lt, reduce: CTE
			reduce(58), // neq, reduce: CTE
			nil,        // plus
			nil,        // minus
			reduce(58), // multiply, reduce: CTE
			reduce(58), // divide, reduce: CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S273
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			shift(320), // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S274
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(55), // comma, reduce: ID_CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(55), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(55), // gt, reduce: ID_CTE
			reduce(55), // lt, reduce: ID_CTE
			reduce(55), // neq, reduce: ID_CTE
			reduce(55), // plus, reduce: ID_CTE
			reduce(55), // minus, reduce: ID_CTE
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S275
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(52), // comma, reduce: FACTOR
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(52), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(52), // gt, reduce: FACTOR
			reduce(52), // lt, reduce: FACTOR
			reduce(52), // neq, reduce: FACTOR
			reduce(52), // plus, reduce: FACTOR
			reduce(52), // minus, reduce: FACTOR
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S276
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(56), // comma, reduce: ID_CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(56), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(56), // gt, reduce: ID_CTE
			reduce(56), // lt, reduce: ID_CTE
			reduce(56), // neq, reduce: ID_CTE
			reduce(56), // plus, reduce: ID_CTE
			reduce(56), // minus, reduce: ID_CTE
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S277
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(57), // comma, reduce: CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(57), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(57), // gt, reduce: CTE
			reduce(57), // lt, reduce: CTE
			reduce(57), // neq, reduce: CTE
			reduce(57), // plus, reduce: CTE
			reduce(57), // minus, reduce: CTE
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S278
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(58), // comma, reduce: CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(58), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(58), // gt, reduce: CTE
			reduce(58), // lt, reduce: CTE
			reduce(58), // neq, reduce: CTE
			reduce(58), // plus, reduce: CTE
			reduce(58), // minus, reduce: CTE
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S279
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(78), // rparen, reduce: EXPRESIONES_PRINT
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S280
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			reduce(11), // main, reduce: MAS_VARIABLES
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			reduce(11), // void, reduce: MAS_VARIABLES
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S281
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			reduce(10), // main, reduce: VARIABLES
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			reduce(10), // void, reduce: VARIABLES
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S282
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(43), // semicolon, reduce: EXP
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S283
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(46), // semicolon, reduce: TERMINO
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			shift(120), // multiply
			shift(121), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S284
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S285
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(323), // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			shift(326), // cte_int
			shift(327), // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S286
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(47), // semicolon, reduce: TERMINO
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(47), // plus, reduce: TERMINO
			reduce(47), // minus, reduce: TERMINO
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S287
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S288
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(329), // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			shift(332), // cte_int
			shift(333), // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S289
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(50), // semicolon, reduce: FACTOR
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(50), // plus, reduce: FACTOR
			reduce(50), // minus, reduce: FACTOR
			reduce(50), // multiply, reduce: FACTOR
			reduce(50), // divide, reduce: FACTOR
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S290
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(47), // semicolon, reduce: TERMINO
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(47), // gt, reduce: TERMINO
			reduce(47), // lt, reduce: TERMINO
			reduce(47), // neq, reduce: TERMINO
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S291
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S292
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(335), // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			shift(338), // cte_int
			shift(339), // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S293
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(50), // semicolon, reduce: FACTOR
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(50), // gt, reduce: FACTOR
			reduce(50), // lt, reduce: FACTOR
			reduce(50), // neq, reduce: FACTOR
			nil,        // plus
			nil,        // minus
			reduce(50), // multiply, reduce: FACTOR
			reduce(50), // divide, reduce: FACTOR
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S294
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(50), // semicolon, reduce: FACTOR
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(50), // gt, reduce: FACTOR
			reduce(50), // lt, reduce: FACTOR
			reduce(50), // neq, reduce: FACTOR
			reduce(50), // plus, reduce: FACTOR
			reduce(50), // minus, reduce: FACTOR
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S295
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(43), // rparen, reduce: EXP
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S296
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(46), // rparen, reduce: TERMINO
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			shift(120), // multiply
			shift(121), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S297
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S298
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(342), // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			shift(345), // cte_int
			shift(346), // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S299
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(47), // rparen, reduce: TERMINO
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(47), // plus, reduce: TERMINO
			reduce(47), // minus, reduce: TERMINO
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S300
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S301
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(348), // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			shift(351), // cte_int
			shift(352), // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S302
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(50), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(50), // plus, reduce: FACTOR
			reduce(50), // minus, reduce: FACTOR
			reduce(50), // multiply, reduce: FACTOR
			reduce(50), // divide, reduce: FACTOR
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S303
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(47), // rparen, reduce: TERMINO
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(47), // gt, reduce: TERMINO
			reduce(47), // lt, reduce: TERMINO
			reduce(47), // neq, reduce: TERMINO
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S304
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S305
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(354), // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			shift(357), // cte_int
			shift(358), // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S306
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(50), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(50), // gt, reduce: FACTOR
			reduce(50), // lt, reduce: FACTOR
			reduce(50), // neq, reduce: FACTOR
			nil,        // plus
			nil,        // minus
			reduce(50), // multiply, reduce: FACTOR
			reduce(50), // divide, reduce: FACTOR
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S307
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(50), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(50), // gt, reduce: FACTOR
			reduce(50), // lt, reduce: FACTOR
			reduce(50), // neq, reduce: FACTOR
			reduce(50), // plus, reduce: FACTOR
			reduce(50), // minus, reduce: FACTOR
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S308
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(43), // comma, reduce: EXP
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(43), // rparen, reduce: EXP
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S309
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(46), // comma, reduce: TERMINO
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(46), // rparen, reduce: TERMINO
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			shift(120), // multiply
			shift(121), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S310
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S311
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(361), // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			shift(364), // cte_int
			shift(365), // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S312
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(47), // comma, reduce: TERMINO
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(47), // rparen, reduce: TERMINO
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(47), // plus, reduce: TERMINO
			reduce(47), // minus, reduce: TERMINO
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S313
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S314
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(367), // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			shift(370), // cte_int
			shift(371), // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S315
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(50), // comma, reduce: FACTOR
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(50), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(50), // plus, reduce: FACTOR
			reduce(50), // minus, reduce: FACTOR
			reduce(50), // multiply, reduce: FACTOR
			reduce(50), // divide, reduce: FACTOR
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S316
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(47), // comma, reduce: TERMINO
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(47), // rparen, reduce: TERMINO
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(47), // gt, reduce: TERMINO
			reduce(47), // lt, reduce: TERMINO
			reduce(47), // neq, reduce: TERMINO
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S317
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S318
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(373), // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			shift(376), // cte_int
			shift(377), // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S319
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(50), // comma, reduce: FACTOR
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(50), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(50), // gt, reduce: FACTOR
			reduce(50), // lt, reduce: FACTOR
			reduce(50), // neq, reduce: FACTOR
			nil,        // plus
			nil,        // minus
			reduce(50), // multiply, reduce: FACTOR
			reduce(50), // divide, reduce: FACTOR
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S320
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(50), // comma, reduce: FACTOR
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(50), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(50), // gt, reduce: FACTOR
			reduce(50), // lt, reduce: FACTOR
			reduce(50), // neq, reduce: FACTOR
			reduce(50), // plus, reduce: FACTOR
			reduce(50), // minus, reduce: FACTOR
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S321
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S322
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			shift(381), // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S323
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(55), // semicolon, reduce: ID_CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			reduce(55), // multiply, reduce: ID_CTE
			reduce(55), // divide, reduce: ID_CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S324
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(52), // semicolon, reduce: FACTOR
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			reduce(52), // multiply, reduce: FACTOR
			reduce(52), // divide, reduce: FACTOR
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S325
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(56), // semicolon, reduce: ID_CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			reduce(56), // multiply, reduce: ID_CTE
			reduce(56), // divide, reduce: ID_CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S326
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(57), // semicolon, reduce: CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			reduce(57), // multiply, reduce: CTE
			reduce(57), // divide, reduce: CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S327
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(58), // semicolon, reduce: CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			reduce(58), // multiply, reduce: CTE
			reduce(58), // divide, reduce: CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S328
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			shift(382), // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S329
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(55), // semicolon, reduce: ID_CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(55), // plus, reduce: ID_CTE
			reduce(55), // minus, reduce: ID_CTE
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S330
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(52), // semicolon, reduce: FACTOR
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(52), // plus, reduce: FACTOR
			reduce(52), // minus, reduce: FACTOR
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S331
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(56), // semicolon, reduce: ID_CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(56), // plus, reduce: ID_CTE
			reduce(56), // minus, reduce: ID_CTE
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S332
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(57), // semicolon, reduce: CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(57), // plus, reduce: CTE
			reduce(57), // minus, reduce: CTE
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S333
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(58), // semicolon, reduce: CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(58), // plus, reduce: CTE
			reduce(58), // minus, reduce: CTE
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S334
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			shift(383), // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S335
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(55), // semicolon, reduce: ID_CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(55), // gt, reduce: ID_CTE
			reduce(55), // lt, reduce: ID_CTE
			reduce(55), // neq, reduce: ID_CTE
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S336
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(52), // semicolon, reduce: FACTOR
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(52), // gt, reduce: FACTOR
			reduce(52), // lt, reduce: FACTOR
			reduce(52), // neq, reduce: FACTOR
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S337
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(56), // semicolon, reduce: ID_CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(56), // gt, reduce: ID_CTE
			reduce(56), // lt, reduce: ID_CTE
			reduce(56), // neq, reduce: ID_CTE
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S338
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(57), // semicolon, reduce: CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(57), // gt, reduce: CTE
			reduce(57), // lt, reduce: CTE
			reduce(57), // neq, reduce: CTE
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S339
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(58), // semicolon, reduce: CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(58), // gt, reduce: CTE
			reduce(58), // lt, reduce: CTE
			reduce(58), // neq, reduce: CTE
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S340
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S341
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			shift(387), // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S342
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(55), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			reduce(55), // multiply, reduce: ID_CTE
			reduce(55), // divide, reduce: ID_CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S343
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(52), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			reduce(52), // multiply, reduce: FACTOR
			reduce(52), // divide, reduce: FACTOR
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S344
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(56), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			reduce(56), // multiply, reduce: ID_CTE
			reduce(56), // divide, reduce: ID_CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S345
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(57), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			reduce(57), // multiply, reduce: CTE
			reduce(57), // divide, reduce: CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S346
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(58), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			reduce(58), // multiply, reduce: CTE
			reduce(58), // divide, reduce: CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S347
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			shift(388), // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S348
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(55), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(55), // plus, reduce: ID_CTE
			reduce(55), // minus, reduce: ID_CTE
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S349
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(52), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(52), // plus, reduce: FACTOR
			reduce(52), // minus, reduce: FACTOR
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S350
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(56), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(56), // plus, reduce: ID_CTE
			reduce(56), // minus, reduce: ID_CTE
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S351
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(57), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(57), // plus, reduce: CTE
			reduce(57), // minus, reduce: CTE
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S352
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(58), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(58), // plus, reduce: CTE
			reduce(58), // minus, reduce: CTE
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S353
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			shift(389), // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S354
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(55), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(55), // gt, reduce: ID_CTE
			reduce(55), // lt, reduce: ID_CTE
			reduce(55), // neq, reduce: ID_CTE
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S355
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(52), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(52), // gt, reduce: FACTOR
			reduce(52), // lt, reduce: FACTOR
			reduce(52), // neq, reduce: FACTOR
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S356
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(56), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(56), // gt, reduce: ID_CTE
			reduce(56), // lt, reduce: ID_CTE
			reduce(56), // neq, reduce: ID_CTE
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S357
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(57), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(57), // gt, reduce: CTE
			reduce(57), // lt, reduce: CTE
			reduce(57), // neq, reduce: CTE
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S358
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(58), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(58), // gt, reduce: CTE
			reduce(58), // lt, reduce: CTE
			reduce(58), // neq, reduce: CTE
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S359
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S360
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			shift(393), // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S361
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(55), // comma, reduce: ID_CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(55), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			reduce(55), // multiply, reduce: ID_CTE
			reduce(55), // divide, reduce: ID_CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S362
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(52), // comma, reduce: FACTOR
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(52), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			reduce(52), // multiply, reduce: FACTOR
			reduce(52), // divide, reduce: FACTOR
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S363
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(56), // comma, reduce: ID_CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(56), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			reduce(56), // multiply, reduce: ID_CTE
			reduce(56), // divide, reduce: ID_CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S364
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(57), // comma, reduce: CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(57), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			reduce(57), // multiply, reduce: CTE
			reduce(57), // divide, reduce: CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S365
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(58), // comma, reduce: CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(58), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			reduce(58), // multiply, reduce: CTE
			reduce(58), // divide, reduce: CTE
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S366
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			shift(394), // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S367
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(55), // comma, reduce: ID_CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(55), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(55), // plus, reduce: ID_CTE
			reduce(55), // minus, reduce: ID_CTE
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S368
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(52), // comma, reduce: FACTOR
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(52), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(52), // plus, reduce: FACTOR
			reduce(52), // minus, reduce: FACTOR
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S369
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(56), // comma, reduce: ID_CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(56), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(56), // plus, reduce: ID_CTE
			reduce(56), // minus, reduce: ID_CTE
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S370
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(57), // comma, reduce: CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(57), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(57), // plus, reduce: CTE
			reduce(57), // minus, reduce: CTE
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S371
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(58), // comma, reduce: CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(58), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(58), // plus, reduce: CTE
			reduce(58), // minus, reduce: CTE
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S372
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			shift(395), // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S373
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(55), // comma, reduce: ID_CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(55), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(55), // gt, reduce: ID_CTE
			reduce(55), // lt, reduce: ID_CTE
			reduce(55), // neq, reduce: ID_CTE
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S374
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(52), // comma, reduce: FACTOR
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(52), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(52), // gt, reduce: FACTOR
			reduce(52), // lt, reduce: FACTOR
			reduce(52), // neq, reduce: FACTOR
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S375
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(56), // comma, reduce: ID_CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(56), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(56), // gt, reduce: ID_CTE
			reduce(56), // lt, reduce: ID_CTE
			reduce(56), // neq, reduce: ID_CTE
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S376
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(57), // comma, reduce: CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(57), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(57), // gt, reduce: CTE
			reduce(57), // lt, reduce: CTE
			reduce(57), // neq, reduce: CTE
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S377
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(58), // comma, reduce: CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(58), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(58), // gt, reduce: CTE
			reduce(58), // lt, reduce: CTE
			reduce(58), // neq, reduce: CTE
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S378
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(47), // semicolon, reduce: TERMINO
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S379
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S380
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(397), // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			shift(400), // cte_int
			shift(401), // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S381
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(50), // semicolon, reduce: FACTOR
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			reduce(50), // multiply, reduce: FACTOR
			reduce(50), // divide, reduce: FACTOR
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S382
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(50), // semicolon, reduce: FACTOR
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(50), // plus, reduce: FACTOR
			reduce(50), // minus, reduce: FACTOR
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S383
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(50), // semicolon, reduce: FACTOR
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(50), // gt, reduce: FACTOR
			reduce(50), // lt, reduce: FACTOR
			reduce(50), // neq, reduce: FACTOR
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S384
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(47), // rparen, reduce: TERMINO
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S385
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S386
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(403), // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			shift(406), // cte_int
			shift(407), // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S387
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(50), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			reduce(50), // multiply, reduce: FACTOR
			reduce(50), // divide, reduce: FACTOR
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S388
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(50), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(50), // plus, reduce: FACTOR
			reduce(50), // minus, reduce: FACTOR
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S389
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(50), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(50), // gt, reduce: FACTOR
			reduce(50), // lt, reduce: FACTOR
			reduce(50), // neq, reduce: FACTOR
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S390
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(47), // comma, reduce: TERMINO
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(47), // rparen, reduce: TERMINO
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S391
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			reduce(54), // id, reduce: FACTOR_OPERADOR
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			shift(68),  // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(73),  // plus
			shift(74),  // minus
			nil,        // multiply
			nil,        // divide
			reduce(54), // cte_int, reduce: FACTOR_OPERADOR
			reduce(54), // cte_float, reduce: FACTOR_OPERADOR
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S392
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			shift(409), // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			shift(412), // cte_int
			shift(413), // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S393
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(50), // comma, reduce: FACTOR
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(50), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			reduce(50), // multiply, reduce: FACTOR
			reduce(50), // divide, reduce: FACTOR
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S394
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(50), // comma, reduce: FACTOR
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(50), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(50), // plus, reduce: FACTOR
			reduce(50), // minus, reduce: FACTOR
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S395
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(50), // comma, reduce: FACTOR
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(50), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(50), // gt, reduce: FACTOR
			reduce(50), // lt, reduce: FACTOR
			reduce(50), // neq, reduce: FACTOR
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S396
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			shift(414), // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S397
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(55), // semicolon, reduce: ID_CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S398
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(52), // semicolon, reduce: FACTOR
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S399
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(56), // semicolon, reduce: ID_CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S400
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(57), // semicolon, reduce: CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S401
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(58), // semicolon, reduce: CTE
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S402
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			shift(415), // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S403
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(55), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S404
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(52), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S405
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(56), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S406
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(57), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S407
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(58), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S408
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			shift(416), // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S409
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(55), // comma, reduce: ID_CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(55), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S410
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(52), // comma, reduce: FACTOR
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(52), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S411
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(56), // comma, reduce: ID_CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(56), // rparen, reduce: ID_CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S412
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(57), // comma, reduce: CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(57), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S413
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(58), // comma, reduce: CTE
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(58), // rparen, reduce: CTE
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S414
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			reduce(50), // semicolon, reduce: FACTOR
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S415
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(50), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S416
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // end
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // empty
			nil,        // main
			nil,        // var
			nil,        // colon
			reduce(50), // comma, reduce: FACTOR
			nil,        // int
			nil,        // float
			nil,        // lbraket
			nil,        // rbraket
			nil,        // void
			nil,        // lparen
			reduce(50), // rparen, reduce: FACTOR
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // multiply
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // do
			nil,        // while
			nil,        // print
			nil,        // cte_string
		},
	},
}
